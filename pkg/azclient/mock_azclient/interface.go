// /*
// Copyright The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */

// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/cloud-provider-azure/pkg/azclient (interfaces: ClientFactory)

// Package mock_azclient is a generated GoMock package.
package mock_azclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	availabilitysetclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/availabilitysetclient"
	deploymentclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/deploymentclient"
	diskclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/diskclient"
	interfaceclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/interfaceclient"
	loadbalancerclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/loadbalancerclient"
	managedclusterclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/managedclusterclient"
	privateendpointclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/privateendpointclient"
	privatelinkserviceclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/privatelinkserviceclient"
	privatezoneclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/privatezoneclient"
	publicipaddressclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/publicipaddressclient"
	publicipprefixclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/publicipprefixclient"
	routetableclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/routetableclient"
	securitygroupclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/securitygroupclient"
	snapshotclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/snapshotclient"
	subnetclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/subnetclient"
	virtualmachineclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/virtualmachineclient"
	virtualmachinescalesetclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/virtualmachinescalesetclient"
	virtualmachinescalesetvmclient "sigs.k8s.io/cloud-provider-azure/pkg/azclient/virtualmachinescalesetvmclient"
)

// MockClientFactory is a mock of ClientFactory interface.
type MockClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockClientFactoryMockRecorder
}

// MockClientFactoryMockRecorder is the mock recorder for MockClientFactory.
type MockClientFactoryMockRecorder struct {
	mock *MockClientFactory
}

// NewMockClientFactory creates a new mock instance.
func NewMockClientFactory(ctrl *gomock.Controller) *MockClientFactory {
	mock := &MockClientFactory{ctrl: ctrl}
	mock.recorder = &MockClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientFactory) EXPECT() *MockClientFactoryMockRecorder {
	return m.recorder
}

// GetavailabilitysetclientInterface mocks base method.
func (m *MockClientFactory) GetavailabilitysetclientInterface() availabilitysetclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetavailabilitysetclientInterface")
	ret0, _ := ret[0].(availabilitysetclient.Interface)
	return ret0
}

// GetavailabilitysetclientInterface indicates an expected call of GetavailabilitysetclientInterface.
func (mr *MockClientFactoryMockRecorder) GetavailabilitysetclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetavailabilitysetclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetavailabilitysetclientInterface))
}

// GetdeploymentclientInterface mocks base method.
func (m *MockClientFactory) GetdeploymentclientInterface() deploymentclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetdeploymentclientInterface")
	ret0, _ := ret[0].(deploymentclient.Interface)
	return ret0
}

// GetdeploymentclientInterface indicates an expected call of GetdeploymentclientInterface.
func (mr *MockClientFactoryMockRecorder) GetdeploymentclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetdeploymentclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetdeploymentclientInterface))
}

// GetdiskclientInterface mocks base method.
func (m *MockClientFactory) GetdiskclientInterface() diskclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetdiskclientInterface")
	ret0, _ := ret[0].(diskclient.Interface)
	return ret0
}

// GetdiskclientInterface indicates an expected call of GetdiskclientInterface.
func (mr *MockClientFactoryMockRecorder) GetdiskclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetdiskclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetdiskclientInterface))
}

// GetinterfaceclientInterface mocks base method.
func (m *MockClientFactory) GetinterfaceclientInterface() interfaceclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetinterfaceclientInterface")
	ret0, _ := ret[0].(interfaceclient.Interface)
	return ret0
}

// GetinterfaceclientInterface indicates an expected call of GetinterfaceclientInterface.
func (mr *MockClientFactoryMockRecorder) GetinterfaceclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetinterfaceclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetinterfaceclientInterface))
}

// GetloadbalancerclientInterface mocks base method.
func (m *MockClientFactory) GetloadbalancerclientInterface() loadbalancerclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetloadbalancerclientInterface")
	ret0, _ := ret[0].(loadbalancerclient.Interface)
	return ret0
}

// GetloadbalancerclientInterface indicates an expected call of GetloadbalancerclientInterface.
func (mr *MockClientFactoryMockRecorder) GetloadbalancerclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetloadbalancerclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetloadbalancerclientInterface))
}

// GetmanagedclusterclientInterface mocks base method.
func (m *MockClientFactory) GetmanagedclusterclientInterface() managedclusterclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetmanagedclusterclientInterface")
	ret0, _ := ret[0].(managedclusterclient.Interface)
	return ret0
}

// GetmanagedclusterclientInterface indicates an expected call of GetmanagedclusterclientInterface.
func (mr *MockClientFactoryMockRecorder) GetmanagedclusterclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetmanagedclusterclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetmanagedclusterclientInterface))
}

// GetprivateendpointclientInterface mocks base method.
func (m *MockClientFactory) GetprivateendpointclientInterface() privateendpointclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetprivateendpointclientInterface")
	ret0, _ := ret[0].(privateendpointclient.Interface)
	return ret0
}

// GetprivateendpointclientInterface indicates an expected call of GetprivateendpointclientInterface.
func (mr *MockClientFactoryMockRecorder) GetprivateendpointclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetprivateendpointclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetprivateendpointclientInterface))
}

// GetprivatelinkserviceclientInterface mocks base method.
func (m *MockClientFactory) GetprivatelinkserviceclientInterface() privatelinkserviceclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetprivatelinkserviceclientInterface")
	ret0, _ := ret[0].(privatelinkserviceclient.Interface)
	return ret0
}

// GetprivatelinkserviceclientInterface indicates an expected call of GetprivatelinkserviceclientInterface.
func (mr *MockClientFactoryMockRecorder) GetprivatelinkserviceclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetprivatelinkserviceclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetprivatelinkserviceclientInterface))
}

// GetprivatezoneclientInterface mocks base method.
func (m *MockClientFactory) GetprivatezoneclientInterface() privatezoneclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetprivatezoneclientInterface")
	ret0, _ := ret[0].(privatezoneclient.Interface)
	return ret0
}

// GetprivatezoneclientInterface indicates an expected call of GetprivatezoneclientInterface.
func (mr *MockClientFactoryMockRecorder) GetprivatezoneclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetprivatezoneclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetprivatezoneclientInterface))
}

// GetpublicipaddressclientInterface mocks base method.
func (m *MockClientFactory) GetpublicipaddressclientInterface() publicipaddressclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetpublicipaddressclientInterface")
	ret0, _ := ret[0].(publicipaddressclient.Interface)
	return ret0
}

// GetpublicipaddressclientInterface indicates an expected call of GetpublicipaddressclientInterface.
func (mr *MockClientFactoryMockRecorder) GetpublicipaddressclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetpublicipaddressclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetpublicipaddressclientInterface))
}

// GetpublicipprefixclientInterface mocks base method.
func (m *MockClientFactory) GetpublicipprefixclientInterface() publicipprefixclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetpublicipprefixclientInterface")
	ret0, _ := ret[0].(publicipprefixclient.Interface)
	return ret0
}

// GetpublicipprefixclientInterface indicates an expected call of GetpublicipprefixclientInterface.
func (mr *MockClientFactoryMockRecorder) GetpublicipprefixclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetpublicipprefixclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetpublicipprefixclientInterface))
}

// GetroutetableclientInterface mocks base method.
func (m *MockClientFactory) GetroutetableclientInterface() routetableclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetroutetableclientInterface")
	ret0, _ := ret[0].(routetableclient.Interface)
	return ret0
}

// GetroutetableclientInterface indicates an expected call of GetroutetableclientInterface.
func (mr *MockClientFactoryMockRecorder) GetroutetableclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetroutetableclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetroutetableclientInterface))
}

// GetsecuritygroupclientInterface mocks base method.
func (m *MockClientFactory) GetsecuritygroupclientInterface() securitygroupclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetsecuritygroupclientInterface")
	ret0, _ := ret[0].(securitygroupclient.Interface)
	return ret0
}

// GetsecuritygroupclientInterface indicates an expected call of GetsecuritygroupclientInterface.
func (mr *MockClientFactoryMockRecorder) GetsecuritygroupclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetsecuritygroupclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetsecuritygroupclientInterface))
}

// GetsnapshotclientInterface mocks base method.
func (m *MockClientFactory) GetsnapshotclientInterface() snapshotclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetsnapshotclientInterface")
	ret0, _ := ret[0].(snapshotclient.Interface)
	return ret0
}

// GetsnapshotclientInterface indicates an expected call of GetsnapshotclientInterface.
func (mr *MockClientFactoryMockRecorder) GetsnapshotclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetsnapshotclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetsnapshotclientInterface))
}

// GetsubnetclientInterface mocks base method.
func (m *MockClientFactory) GetsubnetclientInterface() subnetclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetsubnetclientInterface")
	ret0, _ := ret[0].(subnetclient.Interface)
	return ret0
}

// GetsubnetclientInterface indicates an expected call of GetsubnetclientInterface.
func (mr *MockClientFactoryMockRecorder) GetsubnetclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetsubnetclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetsubnetclientInterface))
}

// GetvirtualmachineclientInterface mocks base method.
func (m *MockClientFactory) GetvirtualmachineclientInterface() virtualmachineclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetvirtualmachineclientInterface")
	ret0, _ := ret[0].(virtualmachineclient.Interface)
	return ret0
}

// GetvirtualmachineclientInterface indicates an expected call of GetvirtualmachineclientInterface.
func (mr *MockClientFactoryMockRecorder) GetvirtualmachineclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetvirtualmachineclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetvirtualmachineclientInterface))
}

// GetvirtualmachinescalesetclientInterface mocks base method.
func (m *MockClientFactory) GetvirtualmachinescalesetclientInterface() virtualmachinescalesetclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetvirtualmachinescalesetclientInterface")
	ret0, _ := ret[0].(virtualmachinescalesetclient.Interface)
	return ret0
}

// GetvirtualmachinescalesetclientInterface indicates an expected call of GetvirtualmachinescalesetclientInterface.
func (mr *MockClientFactoryMockRecorder) GetvirtualmachinescalesetclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetvirtualmachinescalesetclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetvirtualmachinescalesetclientInterface))
}

// GetvirtualmachinescalesetvmclientInterface mocks base method.
func (m *MockClientFactory) GetvirtualmachinescalesetvmclientInterface() virtualmachinescalesetvmclient.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetvirtualmachinescalesetvmclientInterface")
	ret0, _ := ret[0].(virtualmachinescalesetvmclient.Interface)
	return ret0
}

// GetvirtualmachinescalesetvmclientInterface indicates an expected call of GetvirtualmachinescalesetvmclientInterface.
func (mr *MockClientFactoryMockRecorder) GetvirtualmachinescalesetvmclientInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetvirtualmachinescalesetvmclientInterface", reflect.TypeOf((*MockClientFactory)(nil).GetvirtualmachinescalesetvmclientInterface))
}
